{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport { emphasize } from '../styles/colorManipulator';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\nimport { getBreadcrumbCollapsedUtilityClass } from './breadcrumbCollapsedClasses';\n\nvar useUtilityClasses = function useUtilityClasses(styleProps) {\n  var classes = styleProps.classes;\n  var slots = {\n    button: ['button'],\n    icon: ['icon']\n  };\n  return composeClasses(slots, getBreadcrumbCollapsedUtilityClass, classes);\n};\n\nvar BreadcrumbCollapsedButton = experimentalStyled(ButtonBase, {}, {\n  name: 'PrivateBreadcrumbCollapsed',\n  slot: 'Button'\n})(function (_ref) {\n  var theme = _ref.theme;\n  return _extends({\n    display: 'flex',\n    marginLeft: theme.spacing(0.5),\n    marginRight: theme.spacing(0.5)\n  }, theme.palette.mode === 'light' ? {\n    backgroundColor: theme.palette.grey[100],\n    color: theme.palette.grey[700]\n  } : {\n    backgroundColor: theme.palette.grey[700],\n    color: theme.palette.grey[100]\n  }, {\n    borderRadius: 2,\n    '&:hover, &:focus': _extends({}, theme.palette.mode === 'light' ? {\n      backgroundColor: theme.palette.grey[200]\n    } : {\n      backgroundColor: theme.palette.grey[600]\n    }),\n    '&:active': _extends({\n      boxShadow: theme.shadows[0]\n    }, theme.palette.mode === 'light' ? {\n      backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n    } : {\n      backgroundColor: emphasize(theme.palette.grey[600], 0.12)\n    })\n  });\n});\nvar BreadcrumbCollapsedIcon = experimentalStyled(MoreHorizIcon, {}, {\n  name: 'PrivateBreadcrumbCollapsed',\n  slot: 'Icon'\n})({\n  width: 24,\n  height: 16\n});\n/**\n * @ignore - internal component.\n */\n\nfunction BreadcrumbCollapsed(props) {\n  var styleProps = props;\n  var classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/React.createElement(\"li\", null, /*#__PURE__*/React.createElement(BreadcrumbCollapsedButton, _extends({\n    className: classes.button,\n    focusRipple: true\n  }, props, {\n    styleProps: styleProps\n  }), /*#__PURE__*/React.createElement(BreadcrumbCollapsedIcon, {\n    className: classes.icon,\n    styleProps: styleProps\n  })));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default BreadcrumbCollapsed;","map":null,"metadata":{},"sourceType":"module"}
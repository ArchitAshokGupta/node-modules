{"ast":null,"code":"import _classCallCheck from \"/home/architgupta923/data-digital-twin/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/architgupta923/data-digital-twin/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/architgupta923/data-digital-twin/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/architgupta923/data-digital-twin/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/architgupta923/data-digital-twin/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/architgupta923/data-digital-twin/ui/src/App.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Progress } from \"reactstrap\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\nimport Form from \"react-bootstrap/Form\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { ExcelRenderer } from \"react-excel-renderer\";\nimport { Jumbotron, Col, Container, Card } from \"reactstrap\";\nimport { Box } from \"@material-ui/styles\";\nimport MUIDataTable from \"mui-datatables\";\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.componentDidMount = function () {\n      _this.callAPI();\n    };\n\n    _this.callAPI = function () {\n      fetch(\"http://localhost:8888/\").then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        return _this.setState({\n          dataLoaded2: true,\n          apiResponse: res\n        });\n      });\n    };\n\n    _this.renderFile = function (fileObj) {\n      ExcelRenderer(fileObj, function (err, resp) {\n        if (err) {\n          console.log(err);\n        } else {\n          _this.setState({\n            dataLoaded: true,\n            cols: resp.cols,\n            rows: resp.rows\n          });\n        }\n      });\n    };\n\n    _this.checkMimeType = function (event) {\n      var files = event.target.files;\n      var err = [];\n      var types = [\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\", \"application/vnd.ms-excel\", \"text/csv\"];\n\n      for (var x = 0; x < files.length; x++) {\n        if (types.every(function (type) {\n          return files[x].type !== type;\n        })) {\n          err[x] = files[x].type + \" is not a supported format\\n\";\n        }\n      }\n\n      for (var z = 0; z < err.length; z++) {\n        toast.error(err[z]);\n        event.target.value = null;\n      }\n\n      return true;\n    };\n\n    _this.maxSelectFile = function (event) {\n      var files = event.target.files;\n\n      if (files.length > 1) {\n        var msg = \"Only 1 file can be uploaded at a time\";\n        event.target.value = null;\n        toast.warn(msg);\n        return false;\n      }\n\n      return true;\n    };\n\n    _this.checkFileSize = function (event) {\n      var files = event.target.files;\n      var size = 20000000;\n      var err = [];\n\n      for (var x = 0; x < files.length; x++) {\n        if (files[x].size > size) {\n          err[x] = files[x].type + \"is too large, please pick a smaller file\\n\";\n        }\n      }\n\n      for (var z = 0; z < err.length; z++) {\n        toast.error(err[z]);\n        event.target.value = null;\n      }\n\n      return true;\n    };\n\n    _this.onChangeHandler = function (event) {\n      var files = event.target.files;\n      var fileObj = event.target.files[0];\n      var fileName = fileObj.name;\n\n      if (_this.maxSelectFile(event) && _this.checkMimeType(event) && _this.checkFileSize(event)) {\n        _this.setState({\n          selectedFile: files,\n          loaded: 0,\n          filename: fileName\n        });\n\n        _this.renderFile(files[0]);\n      }\n    };\n\n    _this.onClickHandler = function () {\n      var data = new FormData();\n\n      for (var x = 0; x < _this.state.selectedFile.length; x++) {\n        data.append(\"file\", _this.state.selectedFile[x]);\n      }\n\n      axios.post(\"http://localhost:8888/upload\", data, {\n        onUploadProgress: function onUploadProgress(ProgressEvent) {\n          _this.setState({\n            loaded: ProgressEvent.loaded / ProgressEvent.total * 100\n          });\n        }\n      }).then(function (res) {\n        toast.success(\"upload success\");\n      }).catch(function (err) {\n        toast.error(\"upload fail\");\n      });\n    };\n\n    _this.handleChange = function (event) {\n      var value = event.target.value;\n      var name = event.target.name;\n      var formData = _this.state.formData;\n      formData[name] = value;\n\n      _this.setState({\n        formData: formData\n      });\n    };\n\n    _this.state = {\n      filename: null,\n      dataLoaded: false,\n      rows: null,\n      cols: null,\n      selectedFile: null,\n      loaded: 0,\n      isLoading: false,\n      apiResponse: [],\n      dataLoaded2: false,\n      formData: {\n        numberOfSamples: \"100\",\n        fileFormat: \"xlsx\",\n        primaryKey: \"\",\n        piiColumn: \"\",\n        constraints: \"\"\n      }\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var formData = this.state.formData;\n      var options = {\n        count: 50,\n        page: 0,\n        filter: true,\n        filterType: \"dropdown\",\n        responsive: \"vertical\",\n        tableBodyHeight: \"500px\",\n        pagination: false,\n        print: false\n      };\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Jumbotron, {\n        className: \"jumbotron-background\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }\n      }, \"Number of Samples\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        name: \"numberOfSamples\",\n        value: formData.numberOfSamples,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }\n      }, \"File Format\"), /*#__PURE__*/React.createElement(Form.Control, {\n        as: \"select\",\n        value: formData.fileFormat,\n        name: \"fileFormat\",\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 23\n        }\n      }, \"xlsx\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 23\n        }\n      }, \"csv\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 23\n        }\n      }, \"xls\")))), /*#__PURE__*/React.createElement(Form.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }\n      }, \"Primary Key\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        name: \"primaryKey\",\n        value: formData.primaryKey,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }\n      }, \"PII Column\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        name: \"piiColumn\",\n        value: formData.piiColumn,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }\n      }, \"Constraints\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        name: \"Constraints\",\n        value: formData.constraints,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }\n      }))))))), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"row\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"offset-md-3 col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"form-group files\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        for: \"file-upload\",\n        class: \"custom-file-upload\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        class: \"fa fa-cloud-upload\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 23\n        }\n      }), \" Choose a File...\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"file\",\n        name: \"file\",\n        id: \"file-upload\",\n        class: \"form-control\",\n        style: {\n          display: \"none\"\n        },\n        multiple: true,\n        onChange: this.onChangeHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(ToastContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Progress, {\n        max: \"100\",\n        color: \"success\",\n        value: this.state.loaded,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }\n      }, Math.round(this.state.loaded, 2), \"%\")), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        class: \"btn btn-success btn-block\",\n        onClick: this.onClickHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 19\n        }\n      }, \"Upload\")))), /*#__PURE__*/React.createElement(Box, {\n        width: 300,\n        m: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }\n      }), this.state.dataLoaded && /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        body: true,\n        outline: true,\n        color: \"secondary\",\n        className: \"restrict-card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(MUIDataTable, {\n        title: this.state.filename,\n        columns: this.state.rows[0],\n        data: this.state.rows.slice(1, -1),\n        options: options,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 19\n        }\n      }))), this.state.dataLoaded2 && /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        body: true,\n        outline: true,\n        color: \"secondary\",\n        className: \"restrict-card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(MUIDataTable, {\n        title: this.state.filename,\n        columns: this.state.apiResponse[\"columns\"],\n        data: this.state.apiResponse[\"data\"],\n        options: options,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 19\n        }\n      }))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/architgupta923/data-digital-twin/ui/src/App.js"],"names":["React","Component","axios","Progress","ToastContainer","toast","Form","ExcelRenderer","Jumbotron","Col","Container","Card","Box","MUIDataTable","App","props","componentDidMount","callAPI","fetch","then","res","json","setState","dataLoaded2","apiResponse","renderFile","fileObj","err","resp","console","log","dataLoaded","cols","rows","checkMimeType","event","files","target","types","x","length","every","type","z","error","value","maxSelectFile","msg","warn","checkFileSize","size","onChangeHandler","fileName","name","selectedFile","loaded","filename","onClickHandler","data","FormData","state","append","post","onUploadProgress","ProgressEvent","total","success","catch","handleChange","formData","isLoading","numberOfSamples","fileFormat","primaryKey","piiColumn","constraints","options","count","page","filter","filterType","responsive","tableBodyHeight","pagination","print","display","Math","round","slice"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Progress } from \"reactstrap\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\nimport Form from \"react-bootstrap/Form\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { ExcelRenderer } from \"react-excel-renderer\";\nimport { Jumbotron, Col, Container, Card } from \"reactstrap\";\nimport { Box } from \"@material-ui/styles\";\nimport MUIDataTable from \"mui-datatables\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filename: null,\n      dataLoaded: false,\n      rows: null,\n      cols: null,\n      selectedFile: null,\n      loaded: 0,\n      isLoading: false,\n      apiResponse: [],\n      dataLoaded2: false,\n      formData: {\n        numberOfSamples: \"100\",\n        fileFormat: \"xlsx\",\n        primaryKey: \"\",\n        piiColumn: \"\",\n        constraints: \"\",\n      },\n    };\n  }\n\n  componentDidMount = () => {\n    this.callAPI();\n  };\n\n  callAPI = () => {\n    fetch(\"http://localhost:8888/\")\n      .then((res) => res.json())\n      .then((res) => this.setState({ dataLoaded2: true, apiResponse: res }));\n  };\n\n  renderFile = (fileObj) => {\n    ExcelRenderer(fileObj, (err, resp) => {\n      if (err) {\n        console.log(err);\n      } else {\n        this.setState({\n          dataLoaded: true,\n          cols: resp.cols,\n          rows: resp.rows,\n        });\n      }\n    });\n  };\n\n  checkMimeType = (event) => {\n    let files = event.target.files;\n    let err = [];\n    const types = [\n      \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n      \"application/vnd.ms-excel\",\n      \"text/csv\",\n    ];\n    for (var x = 0; x < files.length; x++) {\n      if (types.every((type) => files[x].type !== type)) {\n        err[x] = files[x].type + \" is not a supported format\\n\";\n      }\n    }\n    for (var z = 0; z < err.length; z++) {\n      toast.error(err[z]);\n      event.target.value = null;\n    }\n    return true;\n  };\n\n  maxSelectFile = (event) => {\n    let files = event.target.files;\n    if (files.length > 1) {\n      const msg = \"Only 1 file can be uploaded at a time\";\n      event.target.value = null;\n      toast.warn(msg);\n      return false;\n    }\n    return true;\n  };\n\n  checkFileSize = (event) => {\n    let files = event.target.files;\n    let size = 20000000;\n    let err = [];\n    for (var x = 0; x < files.length; x++) {\n      if (files[x].size > size) {\n        err[x] = files[x].type + \"is too large, please pick a smaller file\\n\";\n      }\n    }\n\n    for (var z = 0; z < err.length; z++) {\n      toast.error(err[z]);\n      event.target.value = null;\n    }\n    return true;\n  };\n\n  onChangeHandler = (event) => {\n    var files = event.target.files;\n    let fileObj = event.target.files[0];\n    let fileName = fileObj.name;\n    if (\n      this.maxSelectFile(event) &&\n      this.checkMimeType(event) &&\n      this.checkFileSize(event)\n    ) {\n      this.setState({\n        selectedFile: files,\n        loaded: 0,\n        filename: fileName,\n      });\n      this.renderFile(files[0]);\n    }\n  };\n\n  onClickHandler = () => {\n    const data = new FormData();\n    for (var x = 0; x < this.state.selectedFile.length; x++) {\n      data.append(\"file\", this.state.selectedFile[x]);\n    }\n    axios\n      .post(\"http://localhost:8888/upload\", data, {\n        onUploadProgress: (ProgressEvent) => {\n          this.setState({\n            loaded: (ProgressEvent.loaded / ProgressEvent.total) * 100,\n          });\n        },\n      })\n      .then((res) => {\n        toast.success(\"upload success\");\n      })\n      .catch((err) => {\n        toast.error(\"upload fail\");\n      });\n  };\n\n  handleChange = (event) => {\n    const value = event.target.value;\n    const name = event.target.name;\n    var formData = this.state.formData;\n    formData[name] = value;\n    this.setState({\n      formData,\n    });\n  };\n\n  render() {\n    const formData = this.state.formData;\n    const options = {\n      count: 50,\n      page: 0,\n      filter: true,\n      filterType: \"dropdown\",\n      responsive: \"vertical\",\n      tableBodyHeight: \"500px\",\n      pagination: false,\n      print: false,\n    };\n\n    return (\n      <div>\n        <div>\n          <Jumbotron className=\"jumbotron-background\">\n            <div className=\"content\">\n              <Form>\n                <Form.Row>\n                  <Form.Group as={Col}>\n                    <Form.Label>Number of Samples</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"numberOfSamples\"\n                      value={formData.numberOfSamples}\n                      onChange={this.handleChange}\n                    />\n                  </Form.Group>\n                  <Form.Group as={Col}>\n                    <Form.Label>File Format</Form.Label>\n                    <Form.Control\n                      as=\"select\"\n                      value={formData.fileFormat}\n                      name=\"fileFormat\"\n                      onChange={this.handleChange}\n                    >\n                      <option>xlsx</option>\n                      <option>csv</option>\n                      <option>xls</option>\n                    </Form.Control>\n                  </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                  <Form.Group as={Col}>\n                    <Form.Label>Primary Key</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"primaryKey\"\n                      value={formData.primaryKey}\n                      onChange={this.handleChange}\n                    />\n                  </Form.Group>\n                  <Form.Group as={Col}>\n                    <Form.Label>PII Column</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"piiColumn\"\n                      value={formData.piiColumn}\n                      onChange={this.handleChange}\n                    />\n                  </Form.Group>\n                  <Form.Group as={Col}>\n                    <Form.Label>Constraints</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"Constraints\"\n                      value={formData.constraints}\n                      onChange={this.handleChange}\n                    />\n                  </Form.Group>\n                </Form.Row>\n              </Form>\n            </div>\n          </Jumbotron>\n        </div>\n        <div>\n          <Container>\n            <form>\n              <row>\n                <div class=\"offset-md-3 col-md-6\">\n                  <div class=\"form-group files\">\n                    <label for=\"file-upload\" class=\"custom-file-upload\">\n                      <i class=\"fa fa-cloud-upload\" /> Choose a File...\n                    </label>\n                    <input\n                      type=\"file\"\n                      name=\"file\"\n                      id=\"file-upload\"\n                      class=\"form-control\"\n                      style={{ display: \"none\" }}\n                      multiple\n                      onChange={this.onChangeHandler}\n                    />\n                  </div>\n                  <div class=\"form-group\">\n                    <ToastContainer />\n                    <Progress\n                      max=\"100\"\n                      color=\"success\"\n                      value={this.state.loaded}\n                    >\n                      {Math.round(this.state.loaded, 2)}%\n                    </Progress>\n                  </div>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-success btn-block\"\n                    onClick={this.onClickHandler}\n                  >\n                    Upload\n                  </button>\n                </div>\n              </row>\n            </form>\n            <Box width={300} m={5} />\n            {this.state.dataLoaded && (\n              <div>\n                <Card body outline color=\"secondary\" className=\"restrict-card\">\n                  <MUIDataTable\n                    title={this.state.filename}\n                    columns={this.state.rows[0]}\n                    data={this.state.rows.slice(1, -1)}\n                    options={options}\n                  />\n                </Card>\n              </div>\n            )}\n            {this.state.dataLoaded2 && (\n              <div>\n                <Card body outline color=\"secondary\" className=\"restrict-card\">\n                  <MUIDataTable\n                    title={this.state.filename}\n                    columns={this.state.apiResponse[\"columns\"]}\n                    data={this.state.apiResponse[\"data\"]}\n                    options={options}\n                  />\n                </Card>\n              </div>\n            )}\n          </Container>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
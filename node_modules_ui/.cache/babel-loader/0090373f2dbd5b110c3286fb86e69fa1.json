{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/architgupta923/data-digital-twin/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject;\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\nvar _ = function _(t) {\n  return t;\n},\n    _t;\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp } from '@material-ui/system';\nimport styled from '../styles/experimentalStyled';\nvar BoxInner = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var children = props.children,\n      clone = props.clone,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutPropertiesLoose(props, [\"children\", \"clone\", \"className\", \"component\", \"sx\"]);\n\n  if (clone) {\n    return /*#__PURE__*/React.cloneElement(children, _extends({\n      className: clsx(children.props.className, className)\n    }, other));\n  }\n\n  if (typeof children === 'function') {\n    return children(_extends({\n      className: className\n    }, other));\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: className\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? BoxInner.propTypes = {\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.node, PropTypes.func]),\n  className: PropTypes.string,\n  clone: PropTypes.bool,\n  component: PropTypes.elementType,\n  sx: PropTypes.object\n} : void 0;\nvar BoxRoot = styled(BoxInner, {}, {\n  muiName: 'MuiBox',\n  skipVariantsResolver: true\n})(_t || (_t = _(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\"])))));\n/**\n * @ignore - do not document.\n */\n\nvar Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {\n  var props = extendSxProp(inProps);\n  return /*#__PURE__*/React.createElement(BoxRoot, _extends({\n    ref: ref\n  }, props));\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.node, PropTypes.func]),\n\n  /**\n   * @ignore\n   */\n  clone: PropTypes.bool,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * @ignore\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default Box;","map":null,"metadata":{},"sourceType":"module"}
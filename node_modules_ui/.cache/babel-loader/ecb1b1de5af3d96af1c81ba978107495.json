{"ast":null,"code":"import _regeneratorRuntime from \"/home/architgupta923/data-digital-twin/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/architgupta923/data-digital-twin/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/architgupta923/data-digital-twin/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/architgupta923/data-digital-twin/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/architgupta923/data-digital-twin/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/architgupta923/data-digital-twin/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/architgupta923/data-digital-twin/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/architgupta923/data-digital-twin/ui/src/App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Progress } from 'reactstrap';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\nimport Form from 'react-bootstrap/Form';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { ExcelRenderer } from 'react-excel-renderer';\nimport { Jumbotron, Col, Container, Card } from 'reactstrap';\nimport { Box } from '@material-ui/core';\nimport MUIDataTable from 'mui-datatables';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.renderFile = function (fileObj) {\n      ExcelRenderer(fileObj, function (err, resp) {\n        if (err) {\n          console.log(err);\n        } else {\n          _this.setState({\n            dataLoaded: true,\n            cols: resp.cols,\n            rows: resp.rows\n          });\n        }\n      });\n    };\n\n    _this.checkMimeType = function (event) {\n      var files = event.target.files;\n      var err = [];\n      var types = ['application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'application/vnd.ms-excel', 'text/csv'];\n\n      for (var x = 0; x < files.length; x++) {\n        if (types.every(function (type) {\n          return files[x].type !== type;\n        })) {\n          err[x] = files[x].type + ' is not a supported format\\n';\n        }\n      }\n\n      ;\n\n      for (var z = 0; z < err.length; z++) {\n        toast.error(err[z]);\n        event.target.value = null;\n      }\n\n      return true;\n    };\n\n    _this.maxSelectFile = function (event) {\n      var files = event.target.files;\n\n      if (files.length > 1) {\n        var msg = 'Only 1 file can be uploaded at a time';\n        event.target.value = null;\n        toast.warn(msg);\n        return false;\n      }\n\n      return true;\n    };\n\n    _this.checkFileSize = function (event) {\n      var files = event.target.files;\n      var size = 20000000;\n      var err = [];\n\n      for (var x = 0; x < files.length; x++) {\n        if (files[x].size > size) {\n          err[x] = files[x].type + 'is too large, please pick a smaller file\\n';\n        }\n      }\n\n      ;\n\n      for (var z = 0; z < err.length; z++) {\n        toast.error(err[z]);\n        event.target.value = null;\n      }\n\n      return true;\n    };\n\n    _this.onChangeHandler = function (event) {\n      var files = event.target.files;\n      var fileObj = event.target.files[0];\n      var fileName = fileObj.name;\n\n      if (_this.maxSelectFile(event) && _this.checkMimeType(event) && _this.checkFileSize(event)) {\n        _this.setState({\n          selectedFile: files,\n          loaded: 0,\n          filename: fileName\n        });\n\n        _this.renderFile(files[0]);\n      }\n    };\n\n    _this.onClickHandler = function () {\n      var data = new FormData();\n\n      for (var x = 0; x < _this.state.selectedFile.length; x++) {\n        data.append('file', _this.state.selectedFile[x]);\n      }\n\n      axios.post(\"http://localhost:8888/upload\", data, {\n        onUploadProgress: function onUploadProgress(ProgressEvent) {\n          _this.setState({\n            loaded: ProgressEvent.loaded / ProgressEvent.total * 100\n          });\n        }\n      }).then(function (res) {\n        toast.success('upload success');\n      }).catch(function (err) {\n        toast.error('upload fail');\n      });\n    };\n\n    _this.handleChange = function (event) {\n      var value = event.target.value;\n      var name = event.target.name;\n      var formData = _this.state.formData;\n      formData[name] = value;\n\n      _this.setState({\n        formData: formData\n      });\n    };\n\n    _this.state = {\n      response: {},\n      filename: null,\n      dataLoaded: false,\n      rows: null,\n      cols: null,\n      selectedFile: null,\n      loaded: 0,\n      isLoading: false,\n      formData: {\n        numberOfSamples: '100',\n        fileFormat: 'xlsx',\n        primaryKey: '',\n        piiColumn: '',\n        constraints: ''\n      }\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(\"http://localhost:8888/upload\");\n\n              case 2:\n                res = _context.sent;\n                this.setState({\n                  response: res.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var formData = this.state.formData;\n      var options = {\n        count: 50,\n        page: 0,\n        filter: true,\n        filterType: 'dropdown',\n        responsive: 'vertical',\n        tableBodyHeight: '500px',\n        pagination: false,\n        print: false\n      };\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Jumbotron, {\n        className: \"jumbotron-background\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Form.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 19\n        }\n      }, \"Number of Samples\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        name: \"numberOfSamples\",\n        value: formData.numberOfSamples,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 19\n        }\n      }, \"File Format\"), /*#__PURE__*/React.createElement(Form.Control, {\n        as: \"select\",\n        value: formData.fileFormat,\n        name: \"fileFormat\",\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 19\n        }\n      }, \"xlsx\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 19\n        }\n      }, \"csv\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 19\n        }\n      }, \"xls\")))), /*#__PURE__*/React.createElement(Form.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 19\n        }\n      }, \"Primary Key\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        name: \"primaryKey\",\n        value: formData.primaryKey,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 19\n        }\n      }, \"PII Column\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        name: \"piiColumn\",\n        value: formData.piiColumn,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 19\n        }\n      }, \"Constraints\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        name: \"Constraints\",\n        value: formData.constraints,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 17\n        }\n      }))))))), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"row\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"offset-md-3 col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"form-group files\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        for: \"file-upload\",\n        class: \"custom-file-upload\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        class: \"fa fa-cloud-upload\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 19\n        }\n      }), \" Choose a File...\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"file\",\n        name: \"file\",\n        id: \"file-upload\",\n        class: \"form-control\",\n        style: {\n          display: 'none'\n        },\n        multiple: true,\n        onChange: this.onChangeHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(ToastContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Progress, {\n        max: \"100\",\n        color: \"success\",\n        value: this.state.loaded,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }\n      }, Math.round(this.state.loaded, 2), \"%\")), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        class: \"btn btn-success btn-block\",\n        onClick: this.onClickHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }\n      }, \"Upload\")))), /*#__PURE__*/React.createElement(Box, {\n        width: 300,\n        m: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 9\n        }\n      }), this.state.dataLoaded && /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        body: true,\n        outline: true,\n        color: \"secondary\",\n        className: \"restrict-card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(MUIDataTable, {\n        title: this.state.filename,\n        columns: this.state.rows[0],\n        data: this.state.rows.slice(1, -1),\n        options: options,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 9\n        }\n      }, this.state.response))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/architgupta923/data-digital-twin/ui/src/App.js"],"names":["React","Component","axios","Progress","ToastContainer","toast","Form","ExcelRenderer","Jumbotron","Col","Container","Card","Box","MUIDataTable","App","props","renderFile","fileObj","err","resp","console","log","setState","dataLoaded","cols","rows","checkMimeType","event","files","target","types","x","length","every","type","z","error","value","maxSelectFile","msg","warn","checkFileSize","size","onChangeHandler","fileName","name","selectedFile","loaded","filename","onClickHandler","data","FormData","state","append","post","onUploadProgress","ProgressEvent","total","then","res","success","catch","handleChange","formData","response","isLoading","numberOfSamples","fileFormat","primaryKey","piiColumn","constraints","get","options","count","page","filter","filterType","responsive","tableBodyHeight","pagination","print","display","Math","round","slice"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Progress } from 'reactstrap';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\nimport Form from 'react-bootstrap/Form';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { ExcelRenderer } from 'react-excel-renderer';\nimport { Jumbotron, Col, Container, Card } from 'reactstrap';\nimport { Box } from '@material-ui/core';\nimport MUIDataTable from 'mui-datatables';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state={\n      response: {},\n      filename: null,\n      dataLoaded: false,\n      rows: null,\n      cols: null,\n      selectedFile: null,\n      loaded: 0,\n      isLoading: false,\n      formData: {\n        numberOfSamples: '100',\n        fileFormat: 'xlsx',\n        primaryKey: '',\n        piiColumn: '',\n        constraints: ''\n    },\n  }\n  }\n\n  async componentDidMount() {\n    var res = await axios.get(\"http://localhost:8888/upload\");\n    this.setState({ response: res.data })\n  }\n\n  renderFile = (fileObj) => {\n      ExcelRenderer(fileObj, (err, resp) => {\n        if(err){\n          console.log(err);            \n        }\n        else{\n          this.setState({\n            dataLoaded: true,\n            cols: resp.cols,\n            rows: resp.rows\n          });\n        }\n      }); \n  }\n\n  checkMimeType = (event) => {\n    let files = event.target.files\n    let err = []\n    const types = ['application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'application/vnd.ms-excel', 'text/csv']\n    for (var x=0; x<files.length; x++) {\n        if(types.every(type => files[x].type !== type)) {  \n         err[x] = files[x].type+' is not a supported format\\n';\n       }\n     };\n     for (var z=0; z<err.length; z++) {\n        toast.error(err[z])\n        event.target.value = null\n    }\n   return true;\n  }\n  \n  maxSelectFile = (event) => {\n    let files = event.target.files\n        if (files.length > 1) { \n           const msg = 'Only 1 file can be uploaded at a time'\n           event.target.value = null\n           toast.warn(msg)\n           return false;\n      }\n    return true;\n  }\n  \n  checkFileSize = (event) => {\n    let files = event.target.files\n    let size = 20000000\n    let err = []; \n    for (var x=0; x<files.length; x++) {\n    if (files[x].size > size) {\n    err[x] = files[x].type+'is too large, please pick a smaller file\\n';\n }\n};\n\n  for (var z=0; z<err.length; z++) {\n    toast.error(err[z])\n    event.target.value = null\n   }\nreturn true;\n}\n\n  onChangeHandler = (event) => {\n    var files = event.target.files\n    let fileObj = event.target.files[0];\n    let fileName = fileObj.name;\n    if(this.maxSelectFile(event) && this.checkMimeType(event) && this.checkFileSize(event)) {\n      this.setState({\n      selectedFile: files,\n      loaded:0,\n      filename: fileName\n    });\n    this.renderFile(files[0])\n  }\n}\n\n  onClickHandler = () => {\n    const data = new FormData() \n    for(var x = 0; x<this.state.selectedFile.length; x++) {\n      data.append('file', this.state.selectedFile[x])\n    }\n    axios.post(\"http://localhost:8888/upload\", data, {\n      onUploadProgress: ProgressEvent => {\n        this.setState({\n          loaded: (ProgressEvent.loaded / ProgressEvent.total*100),\n        })\n      },\n    })\n    .then(res => {\n        toast.success('upload success')\n      })\n      .catch(err => {\n        toast.error('upload fail')\n      })\n    }\n\n  handleChange = (event) => {\n    const value = event.target.value;\n    const name = event.target.name;\n    var formData = this.state.formData;\n    formData[name] = value;\n    this.setState({\n      formData\n    });\n  }\n\n  render() {\n  const formData = this.state.formData;\n  const options = {\n    count: 50,\n    page: 0,\n    filter: true,\n    filterType: 'dropdown',\n    responsive: 'vertical',\n    tableBodyHeight:'500px',\n    pagination: false,\n    print: false\n    };\n\n    return (\n      <div>\n        <div>\n          <Jumbotron className=\"jumbotron-background\">\n          <div className=\"content\">\n            <Form>\n              <Form.Row>\n                <Form.Group as={Col}>\n                  <Form.Label>Number of Samples</Form.Label>\n                <Form.Control \n                  type=\"text\"\n                  name=\"numberOfSamples\"\n                  value={formData.numberOfSamples}\n                  onChange={this.handleChange}/>\n                </Form.Group>\n                <Form.Group as={Col}>\n                  <Form.Label>File Format</Form.Label>\n                <Form.Control \n                  as=\"select\"\n                  value={formData.fileFormat}\n                  name=\"fileFormat\"\n                  onChange={this.handleChange}>\n                  <option>xlsx</option>\n                  <option>csv</option>\n                  <option>xls</option>\n                </Form.Control>\n                </Form.Group>\n              </Form.Row>\n              <Form.Row>\n                <Form.Group as={Col}>\n                  <Form.Label>Primary Key</Form.Label>\n                <Form.Control \n                  type=\"text\"\n                  name=\"primaryKey\"\n                  value={formData.primaryKey}\n                  onChange={this.handleChange}/>\n                </Form.Group>\n                <Form.Group as={Col}>\n                  <Form.Label>PII Column</Form.Label>\n                <Form.Control \n                  type=\"text\"\n                  name=\"piiColumn\"\n                  value={formData.piiColumn}\n                  onChange={this.handleChange}/>\n                </Form.Group>\n                <Form.Group as={Col}>\n                  <Form.Label>Constraints</Form.Label>\n                <Form.Control \n                  type=\"text\"\n                  name=\"Constraints\"\n                  value={formData.constraints}\n                  onChange={this.handleChange}/>\n                </Form.Group>\n              </Form.Row>\n            </Form>\n          </div>\n          </Jumbotron>\n        </div>\n        <div>\n        <Container>\n        <form>\n          <row>\n            <div class=\"offset-md-3 col-md-6\">\n              <div class=\"form-group files\">\n                <label for=\"file-upload\" class=\"custom-file-upload\">\n                  <i class=\"fa fa-cloud-upload\"></i> Choose a File...\n                </label>\n                <input type=\"file\" name=\"file\" id=\"file-upload\" class=\"form-control\" style={{display:'none'}} multiple onChange={this.onChangeHandler}/>\n              </div>\n            <div class=\"form-group\">\n            <ToastContainer/>\n            <Progress max=\"100\" color=\"success\" value={this.state.loaded}>{Math.round(this.state.loaded, 2)}%</Progress>\n            </div> \n            <button type=\"button\" class=\"btn btn-success btn-block\" onClick={this.onClickHandler}>Upload</button>\n\t    </div>                                              \n          </row>   \n        </form>\n        <Box width={300} m={5}>\n        </Box>\n        {this.state.dataLoaded && \n        <div>\n          <Card body outline color=\"secondary\" className=\"restrict-card\">\n            <MUIDataTable title={this.state.filename} columns={this.state.rows[0]} data={this.state.rows.slice(1, -1)} options={options}/>\n          </Card>  \n        </div>}\n        <div>{this.state.response}</div>\n        </Container>\n        </div>\n        </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
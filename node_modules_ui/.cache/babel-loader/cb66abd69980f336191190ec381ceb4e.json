{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport StepperContext from '../Stepper/StepperContext';\nimport StepContext from './StepContext';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport { getStepUtilityClass } from './stepClasses';\n\nvar overridesResolver = function overridesResolver(props, styles) {\n  var styleProps = props.styleProps;\n  return deepmerge(styles.root || {}, _extends({}, styles[styleProps.orientation], styleProps.alternativeLabel && styles.alternativeLabel, styleProps.completed && styles.completed));\n};\n\nvar useUtilityClasses = function useUtilityClasses(styleProps) {\n  var classes = styleProps.classes,\n      orientation = styleProps.orientation,\n      alternativeLabel = styleProps.alternativeLabel,\n      completed = styleProps.completed;\n  var slots = {\n    root: ['root', orientation, alternativeLabel && 'alternativeLabel', completed && 'completed']\n  };\n  return composeClasses(slots, getStepUtilityClass, classes);\n};\n\nvar StepRoot = experimentalStyled('div', {}, {\n  name: 'MuiStep',\n  slot: 'Root',\n  overridesResolver: overridesResolver\n})(function (_ref) {\n  var styleProps = _ref.styleProps;\n  return _extends({}, styleProps.orientation === 'horizontal' && {\n    paddingLeft: 8,\n    paddingRight: 8\n  }, styleProps.alternativeLabel && {\n    flex: 1,\n    position: 'relative'\n  });\n});\nvar Step = /*#__PURE__*/React.forwardRef(function Step(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiStep'\n  });\n\n  var activeProp = props.active,\n      children = props.children,\n      className = props.className,\n      completedProp = props.completed,\n      disabledProp = props.disabled,\n      _props$expanded = props.expanded,\n      expanded = _props$expanded === void 0 ? false : _props$expanded,\n      index = props.index,\n      last = props.last,\n      other = _objectWithoutPropertiesLoose(props, [\"active\", \"children\", \"className\", \"completed\", \"disabled\", \"expanded\", \"index\", \"last\"]);\n\n  var _React$useContext = React.useContext(StepperContext),\n      activeStep = _React$useContext.activeStep,\n      connector = _React$useContext.connector,\n      alternativeLabel = _React$useContext.alternativeLabel,\n      orientation = _React$useContext.orientation,\n      nonLinear = _React$useContext.nonLinear;\n\n  var _activeProp = activeProp,\n      active = _activeProp === void 0 ? false : _activeProp,\n      _completedProp = completedProp,\n      completed = _completedProp === void 0 ? false : _completedProp,\n      _disabledProp = disabledProp,\n      disabled = _disabledProp === void 0 ? false : _disabledProp;\n\n  if (activeStep === index) {\n    active = activeProp !== undefined ? activeProp : true;\n  } else if (!nonLinear && activeStep > index) {\n    completed = completedProp !== undefined ? completedProp : true;\n  } else if (!nonLinear && activeStep < index) {\n    disabled = disabledProp !== undefined ? disabledProp : true;\n  }\n\n  var contextValue = React.useMemo(function () {\n    return {\n      index: index,\n      last: last,\n      expanded: expanded,\n      icon: index + 1,\n      active: active,\n      completed: completed,\n      disabled: disabled\n    };\n  }, [index, last, expanded, active, completed, disabled]);\n\n  var styleProps = _extends({}, props, {\n    active: active,\n    orientation: orientation,\n    alternativeLabel: alternativeLabel,\n    completed: completed,\n    disabled: disabled,\n    expanded: expanded\n  });\n\n  var classes = useUtilityClasses(styleProps);\n  var newChildren = /*#__PURE__*/React.createElement(StepRoot, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    styleProps: styleProps\n  }, other), connector && alternativeLabel && index !== 0 ? connector : null, children);\n  return /*#__PURE__*/React.createElement(StepContext.Provider, {\n    value: contextValue\n  }, connector && !alternativeLabel && index !== 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, connector, newChildren) : newChildren);\n});\nprocess.env.NODE_ENV !== \"production\" ? Step.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Sets the step as active. Is passed to child components.\n   */\n  active: PropTypes.bool,\n\n  /**\n   * Should be `Step` sub-components such as `StepLabel`, `StepContent`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Mark the step as completed. Is passed to child components.\n   */\n  completed: PropTypes.bool,\n\n  /**\n   * If `true`, the step is disabled, will also disable the button if\n   * `StepButton` is a child of `Step`. Is passed to child components.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Expand the step.\n   * @default false\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * The position of the step.\n   * The prop defaults to the value inherited from the parent Stepper component.\n   */\n  index: PropTypes.number,\n\n  /**\n   * If `true`, the Step is displayed as rendered last.\n   * The prop defaults to the value inherited from the parent Stepper component.\n   */\n  last: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default Step;","map":null,"metadata":{},"sourceType":"module"}
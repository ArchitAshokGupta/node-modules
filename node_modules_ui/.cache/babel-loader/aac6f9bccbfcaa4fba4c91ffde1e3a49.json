{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\n\nvar overridesResolver = function overridesResolver(props, styles) {\n  return styles.root || {};\n};\n\nvar useUtilityClasses = function useUtilityClasses(styleProps) {\n  var classes = styleProps.classes;\n  var slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\n\nvar CardContentRoot = experimentalStyled('div', {}, {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: overridesResolver\n})(function () {\n  /* Styles applied to the root element. */\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n\n  var className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutPropertiesLoose(props, [\"className\", \"component\"]);\n\n  var styleProps = _extends({}, props, {\n    component: component\n  });\n\n  var classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/React.createElement(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    styleProps: styleProps,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default CardContent;","map":null,"metadata":{},"sourceType":"module"}
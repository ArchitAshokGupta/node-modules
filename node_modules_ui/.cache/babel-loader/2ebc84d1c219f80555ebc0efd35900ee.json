{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport sliderUnstyledClasses from './sliderUnstyledClasses';\n\nvar useValueLabelClasses = function useValueLabelClasses(props) {\n  var open = props.open;\n  var utilityClasses = {\n    offset: clsx(sliderUnstyledClasses.valueLabel, sliderUnstyledClasses.valueLabelOffset, open && sliderUnstyledClasses.valueLabelOpen),\n    circle: sliderUnstyledClasses.valueLabelCircle,\n    label: sliderUnstyledClasses.valueLabelLabel\n  };\n  return utilityClasses;\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction SliderValueLabelUnstyled(props) {\n  var children = props.children,\n      className = props.className,\n      value = props.value,\n      _props$components = props.components,\n      components = _props$components === void 0 ? {} : _props$components,\n      theme = props.theme;\n  var classes = useValueLabelClasses(props);\n  var Root = components.Root || 'span';\n  return /*#__PURE__*/React.cloneElement(children, {\n    className: clsx(children.props.className)\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, children.props.children, /*#__PURE__*/React.createElement(Root, {\n    className: clsx(classes.offset, className),\n    theme: theme,\n    \"aria-hidden\": true\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.circle\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, value)))));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? SliderValueLabelUnstyled.propTypes = {\n  children: PropTypes.element.isRequired,\n  className: PropTypes.string,\n  components: PropTypes.shape({\n    Root: PropTypes.elementType\n  }),\n  theme: PropTypes.any,\n  value: PropTypes.node\n} : void 0;\nexport default SliderValueLabelUnstyled;","map":null,"metadata":{},"sourceType":"module"}
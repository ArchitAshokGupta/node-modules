{"ast":null,"code":"import _defineProperty from \"/home/architgupta923/data-digital-twin/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"/home/architgupta923/data-digital-twin/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4;\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _ = function _(t) {\n  return t;\n},\n    _t,\n    _t2,\n    _t3,\n    _t4;\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { keyframes } from '@material-ui/styled-engine';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport circularProgressClasses, { getCircularProgressUtilityClass } from './circularProgressClasses';\nvar SIZE = 44;\nvar circularRotateKeyframe = keyframes(_t || (_t = _(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n0% {\\n  transform: rotate(0deg);\\n}\\n100% {\\n  transform: rotate(360deg);\\n}\\n\"])))));\nvar circularDashKeyframe = keyframes(_t2 || (_t2 = _(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n0% {\\n  stroke-dasharray: 1px, 200px;\\n  stroke-dashoffset: 0px;\\n}\\n50% {\\n  stroke-dasharray: 100px, 200px;\\n  stroke-dashoffset: -15px;\\n}\\n100% {\\n  stroke-dasharray: 100px, 200px;\\n  stroke-dashoffset: -125px;\\n}\\n\"])))));\n\nvar overridesResolver = function overridesResolver(props, styles) {\n  var _extends2;\n\n  var styleProps = props.styleProps;\n  return deepmerge(styles.root || {}, _extends({}, styles[styleProps.variant], styles[\"color\".concat(capitalize(styleProps.color))], (_extends2 = {}, _defineProperty(_extends2, \"& .\".concat(circularProgressClasses.svg), styles.svg), _defineProperty(_extends2, \"& .\".concat(circularProgressClasses.circle), _extends({}, styles.circle, styles[\"circle\".concat(capitalize(styleProps.variant))], styleProps.disableShrink && styles.circleDisableShrink)), _extends2)));\n};\n\nvar useUtilityClasses = function useUtilityClasses(styleProps) {\n  var classes = styleProps.classes,\n      variant = styleProps.variant,\n      color = styleProps.color,\n      disableShrink = styleProps.disableShrink;\n  var slots = {\n    root: ['root', variant, \"color\".concat(capitalize(color))],\n    svg: ['svg'],\n    circle: ['circle', \"circle\".concat(capitalize(variant)), disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n}; // This `styled()` function invokes keyframes. `styled-components` only supports keyframes\n// in string templates. Do not convert these styles in JS object as it will break.\n\n\nvar CircularProgressRoot = experimentalStyled('span', {}, {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: overridesResolver\n})(_t3 || (_t3 = _(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n  display: inline-block;\\n\\n  transition: \", \";\\n\\n  animation-name: \", \";\\n  animation-duration: \", \";\\n  animation-timing-function: \", \";\\n  animation-iteration-count: \", \";\\n    \\n  color: \", \";\\n\"])), 0, 0, 0, 0, 0, 0)), function (_ref) {\n  var styleProps = _ref.styleProps,\n      theme = _ref.theme;\n  return styleProps.variant === 'determinate' ? theme.transitions.create('transform') : undefined;\n}, function (_ref2) {\n  var styleProps = _ref2.styleProps;\n  return styleProps.variant === 'indeterminate' && circularRotateKeyframe;\n}, function (_ref3) {\n  var styleProps = _ref3.styleProps;\n  return styleProps.variant === 'indeterminate' && '1.4s';\n}, function (_ref4) {\n  var styleProps = _ref4.styleProps;\n  return styleProps.variant === 'indeterminate' && 'linear';\n}, function (_ref5) {\n  var styleProps = _ref5.styleProps;\n  return styleProps.variant === 'indeterminate' && 'infinite';\n}, function (_ref6) {\n  var styleProps = _ref6.styleProps,\n      theme = _ref6.theme;\n  return styleProps.color === 'primary' || styleProps.color === 'secondary' ? theme.palette[styleProps.color].main : undefined;\n});\nvar CircularProgressSVG = experimentalStyled('svg', {}, {\n  name: 'MuiCircularProgress',\n  slot: 'Svg'\n})({\n  /* Styles applied to the svg element. */\n  display: 'block' // Keeps the progress centered\n\n}); // This `styled()` function invokes keyframes. `styled-components` only supports keyframes\n// in string templates. Do not convert these styles in JS object as it will break.\n\nvar CircularProgressCircle = experimentalStyled('circle', {}, {\n  name: 'MuiCircularProgress',\n  slot: 'Circle'\n})(_t4 || (_t4 = _(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n  stroke: currentColor;\\n\\n  transition: \", \";\\n\\n  animation-name: \", \";\\n  animation-duration: \", \";\\n  animation-timing-function: \", \";\\n  animation-iteration-count: \", \";\\n  stroke-dasharray: \", \";\\n  stroke-dashoffset: \", \";\\n\"])), 0, 0, 0, 0, 0, 0, 0)), function (_ref7) {\n  var styleProps = _ref7.styleProps,\n      theme = _ref7.theme;\n  return styleProps.variant === 'determinate' ? theme.transitions.create('stroke-dashoffset') : undefined;\n}, function (_ref8) {\n  var styleProps = _ref8.styleProps;\n\n  if (styleProps.disableShrink) {\n    return 'none';\n  }\n\n  return styleProps.variant === 'indeterminate' ? circularDashKeyframe : undefined;\n}, function (_ref9) {\n  var styleProps = _ref9.styleProps;\n  return styleProps.variant === 'indeterminate' && '1.4s';\n}, function (_ref10) {\n  var styleProps = _ref10.styleProps;\n  return styleProps.variant === 'indeterminate' && 'ease-in-out';\n}, function (_ref11) {\n  var styleProps = _ref11.styleProps;\n  return styleProps.variant === 'indeterminate' && 'infinite';\n}, function (_ref12) {\n  var styleProps = _ref12.styleProps;\n  return styleProps.variant === 'indeterminate' && '80px, 200px';\n}, function (_ref13) {\n  var styleProps = _ref13.styleProps;\n  return styleProps.variant === 'indeterminate' && '0px';\n});\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nvar CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n\n  var className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$disableShrink = props.disableShrink,\n      disableShrink = _props$disableShrink === void 0 ? false : _props$disableShrink,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 40 : _props$size,\n      style = props.style,\n      _props$thickness = props.thickness,\n      thickness = _props$thickness === void 0 ? 3.6 : _props$thickness,\n      _props$value = props.value,\n      value = _props$value === void 0 ? 0 : _props$value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'indeterminate' : _props$variant,\n      other = _objectWithoutPropertiesLoose(props, [\"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"]);\n\n  var styleProps = _extends({}, props, {\n    color: color,\n    disableShrink: disableShrink,\n    size: size,\n    thickness: thickness,\n    value: value,\n    variant: variant\n  });\n\n  var classes = useUtilityClasses(styleProps);\n  var circleStyle = {};\n  var rootStyle = {};\n  var rootProps = {};\n\n  if (variant === 'determinate') {\n    var circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = \"\".concat(((100 - value) / 100 * circumference).toFixed(3), \"px\");\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n\n  return /*#__PURE__*/React.createElement(CircularProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    styleProps: styleProps,\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other), /*#__PURE__*/React.createElement(CircularProgressSVG, {\n    className: classes.svg,\n    styleProps: styleProps,\n    viewBox: \"\".concat(SIZE / 2, \" \").concat(SIZE / 2, \" \").concat(SIZE, \" \").concat(SIZE)\n  }, /*#__PURE__*/React.createElement(CircularProgressCircle, {\n    className: classes.circle,\n    style: circleStyle,\n    styleProps: styleProps,\n    cx: SIZE,\n    cy: SIZE,\n    r: (SIZE - thickness) / 2,\n    fill: \"none\",\n    strokeWidth: thickness\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, function (props) {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('Material-UI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;","map":null,"metadata":{},"sourceType":"module"}